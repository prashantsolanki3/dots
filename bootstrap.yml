---
- name: Configure Bootstrap
  hosts: dev
  vars_files:
    - vars/bootstrap_defaults.yml
  become: true
  gather_facts: true
  vars:
    apt_retries: 15 
    apt_retry_delay: 10

  handlers:
    - name: Restart sshd
      service: name=sshd state=restarted
    - name: reload systemctl
      command: systemctl daemon-reload

  pre_tasks:
    - name: Update System
      when: update_system == true
      include_tasks: tasks/update_system.yml
    
    - name: Install base system packages
      package:
        name: '{{item}}'
        state: latest
      loop:
        - s3fs
      tags: ['base_packages', 'packages']
      become: true
      register: result
      until: result is not failed
      retries: '{{ apt_retries }}'
      delay: '{{ apt_retry_delay }}'

    - name: Ensure template files
      template:
        src: '{{item.src}}'
        dest: '{{item.dest}}'
        mode: '{{item.mode}}'
        owner: '{{ansible_user}}'
        group: '{{ansible_user}}'
      loop:
        - { src: aws/credentials, dest: '/etc/passwd-s3fs', mode: '0600' }

    - name: Mount External Network volumes
      when: 
        - mounts is defined
      include_tasks: tasks/mount_network_volumes.yml

    - name: Install Docker
      include_tasks: tasks/install_docker.yml
    - name: Ensure ssh directory exists
      file:
        path: ${HOME}/.ssh
        state: directory
    - name: Ensure user files
      copy:
        src: '{{item.src}}'
        dest: '{{item.dest}}'
        mode: '0600'
        owner: '{{ansible_user}}'
        group: '{{ansible_user}}'
      # Add user dot files here 
      loop:
        - { src: '/root/.ssh/id_rsa', dest: '${HOME}/.ssh/id_rsa' }
        - { src: '/root/.ssh/id_rsa.pub', dest: '${HOME}/.ssh/id_rsa.pub' }
    
  tasks:
    - name: Create Docker Github Runner
      when: github_repos != None
      include_tasks: tasks/create_docker_github_runner.yml
      vars:
        github_repos_list: "{{ github_repos.split(',') }}"
