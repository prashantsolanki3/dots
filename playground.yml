---
- name: Configure Ubuntu
  hosts: all
  vars_files:
    # - ../playground_host_vars.yaml
    - vars/playground_defaults.yml
  become: true
  vars:
    apt_retries: 15 
    apt_retry_delay: 10
  handlers:
    - name: Restart sshd
      service: name=sshd state=restarted
      become: true
  pre_tasks:
    - name: Update System
      when: update_system == true
      include_tasks: tasks/update_system.yml
  tasks:
    - name: Install base system packages
      package:
        name: '{{item}}'
        state: latest
      loop:
        - curl
        - htop
        - unzip
        - wget
        - zip
        - colordiff
        - lsb-release
        - glusterfs-client
        - software-properties-common
      tags: ['base_packages', 'packages']
      become: true
      register: result
      until: result is not failed
      retries: '{{ apt_retries }}'
      delay: '{{ apt_retry_delay }}'


    - name:  Mount Network volumes
      when: 
        - mounts is defined
      vars:
        mounts: "{{ mounts }}"
      include_tasks: tasks/mount_network_volumes.yml

    - name: Install Docker
      include_tasks: tasks/install_docker.yml

    # Install user packages
    - name: Add HashiCorp GPG key
      apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: present
    - name: Add APT repositories
      apt_repository:
        repo: '{{item}}'
        state: present
      loop: 
        - deb [arch=amd64] https://apt.releases.hashicorp.com {{ansible_distribution_release}} main
        - ppa:deadsnakes/ppa
    - name: Install dev packages
      package:
        name: '{{item}}'
        state: latest
      loop:
        - git
        - ffmpeg
        - terraform
        - python3
        - python3-dev
        - python3-pip
        - python3-venv
        - python3.10
        - python3.10-distutils
        - python3.10-dev
        - python3.10-venv
      become: true
      register: result
      until: result is not failed
      retries: '{{ apt_retries }}'
      delay: '{{ apt_retry_delay }}'
      tags: ['dev_packages', 'packages']

    - name: Remove not-needed packages
      package:
        name: '{{item}}'
        state: absent
      loop:
        - chromium
      tags: ['remove_packages']
      become: true

    - name: Ensure user dot files
      copy:
        src: '{{item.src}}'
        dest: '{{item.dest}}'
        mode: '0600'
        owner: '{{host_username}}'
        group: '{{host_username}}'
      # Add user dot files here 
      loop:
        - { src: dots/.wgetrc, dest: '/home/{{host_username}}/.wgetrc' }
        - { src: dots/.gitignore, dest: '/home/{{host_username}}/.gitignore' }
        - { src: dots/.curlrc, dest: '/home/{{host_username}}/.curlrc' }
        - { src: dots/.bash_aliases, dest: '/home/{{host_username}}/.bash_aliases' }
        - { src: dots/.bashrc, dest: '/home/{{host_username}}/.bashrc' }

      tags: ['user_dots', 'dots']

    - name: Ensure root dot files
      copy:
        src: '{{item.src}}'
        dest: '{{item.dest}}'
        mode: '0600'
        owner: root
        group: root
      # Add root dot files here
      loop:
        - { src: dots/.wgetrc, dest: '/root/.wgetrc' }
        - { src: dots/.curlrc, dest: '/root/.curlrc' }
      become: true
      tags: ['dots']

    - name: Ensure default directories in home
      file:
        path: '{{item}}'
        state: directory
        mode: '0700'
        owner: '{{host_username}}'
        group: '{{host_username}}'
      loop:
        - '/home/{{host_username}}/dots'
        - '/home/{{host_username}}/playground'
        - '/home/{{host_username}}/.ssh'
      become: true
      tags: ['dir-structure']

    - name: Ensure user files (from templates)
      template:
        src: '{{item.src}}'
        dest: '{{item.dest}}'
        mode: '0600'
        owner: '{{host_username}}'
        group: '{{host_username}}'
      loop:
        - { src: dots/authorized_keys, dest: '/home/{{host_username}}/.ssh/authorized_keys' }

    # Install python extra packages and ensure they are up to date.
    - name: Ensure pip3 packages
      pip:
        name: '{{item}}'
        executable: pip3
        state: latest
      loop:
        - ansible
        - awscli
        - pipenv
        - jupyterlab
      become: true

    - name: Configure Git
      include_tasks: tasks/configure_git.yml

    - name: Install Code Server
      include_tasks: tasks/install_code_server.yml
